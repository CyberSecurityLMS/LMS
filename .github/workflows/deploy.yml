name: CD Deploy LMS

on:
  push:
    branches: [main]

  pull_request_target:
    branches: [main]

jobs:
  check-paths:
    runs-on: ubuntu-latest
    outputs:
      backend_changed: ${{ steps.filter.outputs.backend }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            backend:
              - '**.go'
              - 'backend/**'
              - 'go.mod'
              - 'go.sum'
  deploy:
    if: github.repository == 'CyberSecurityLMS/LMS' && needs.check-paths.outputs.backend_changed == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "${{ secrets.KNOWN_HOSTS }}" > ~/.ssh/known_hosts

      - name: Prepare server directory
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          USERNAME: ${{ secrets.USERNAME }}
          SERVER_DIR: ${{ secrets.SERVER_DIR }}
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -p 1337 $USERNAME@$SERVER_IP "
            sudo mkdir -p $SERVER_DIR || exit 1
            sudo chown $USERNAME:$USERNAME $SERVER_DIR || exit 1
            sudo chmod 755 $SERVER_DIR || exit 1
          "

      - name: Build Go backend
        run: |
          cd backend
          go mod download
          go build -o lms_back .
          ls -lh lms_back

      - name: Build Gateway
        run: |
          cd api-gateway
          go mod download
          go build -o gateway_bin .
          ls -lh gateway_bin

      - name: Upload Go binary to server
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          USERNAME: ${{ secrets.USERNAME }}
          SERVER_DIR: ${{ secrets.SERVER_DIR }}
        run: |
          rsync -avz --progress -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -p 1337" backend/lms_back $USERNAME@$SERVER_IP:$SERVER_DIR

      - name: Upload Gateway binary to server
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          USERNAME: ${{ secrets.USERNAME }}
          SERVER_DIR: ${{ secrets.SERVER_DIR }}
        run: |
          rsync -avz --progress -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -p 1337" api-gateway/gateway_bin api-gateway/configs/config.yaml $USERNAME@$SERVER_IP:$SERVER_DIR

      - name: Restart backend service
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          USERNAME: ${{ secrets.USERNAME }}
          SERVER_DIR: ${{ secrets.SERVER_DIR }}
        run: |
          ssh -v -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -p 1337 $USERNAME@$SERVER_IP "
            sudo systemctl restart lms_back ||
            (sudo pkill lms_back; nohup $SERVER_DIR/lms_back > /dev/null 2>&1 &)
          "
      - name: Restart gateway service
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          USERNAME: ${{ secrets.USERNAME }}
          SERVER_DIR: ${{ secrets.SERVER_DIR }}
        run: |
          ssh -v -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -p 1337 $USERNAME@$SERVER_IP "
            sudo systemctl restart gateway_bin ||
            (sudo pkill gateway_bin; nohup $SERVER_DIR/gateway_bin > /dev/null 2>&1 &)
          "
