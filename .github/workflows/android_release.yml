name: Android Release CI

on:
  workflow_dispatch:
    inputs:
      versionName:
        description: 'Version name (e.g., 1.0.0)'
        required: true
        type: string
      versionCode:
        description: 'Version code (e.g., 100)'
        required: true
        type: string
      releaseNotes:
        description: 'Release notes'
        required: false
        type: string
        default: ''

env:
  BUILD_OUTPUT_DIR: lms_android/app/build/outputs
  ARTIFACT_PREFIX: app-release

jobs:
  quality-checks:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Run static analysis
        run: ./gradlew ktlintCheck lintDebug

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest

  build-release:
    name: Build Release
    needs: quality-checks
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.set_version.outputs.release_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Configure Keystore
        run: |
          mkdir -p keystore
          echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > keystore/cybersec-release.jks
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > keystore/cybersec-release.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> keystore/cybersec-release.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> keystore/cybersec-release.properties

      - name: Update version info
        id: set_version
        run: |
          sed -i "s/versionCode = .*/versionCode = ${{ github.event.inputs.versionCode }}/" lms_android/app/build.gradle.kts
          sed -i "s/versionName = .*/versionName = \"${{ github.event.inputs.versionName }}\"/" lms_android/app/build.gradle.kts
          echo "release_tag=v${{ github.event.inputs.versionName }}" >> $GITHUB_OUTPUT
          echo "APK_VERSION=${{ github.event.inputs.versionName }}" >> $GITHUB_ENV

      - name: Build Release APK
        run: ./gradlew assembleRelease --stacktrace --no-daemon
        working-directory: lms_android

      - name: Build App Bundle
        run: ./gradlew bundleRelease --stacktrace --no-daemon
        working-directory: lms_android

      - name: Rename artifacts
        run: |
          mv "$BUILD_OUTPUT_DIR/apk/release/$ARTIFACT_PREFIX.apk" "$BUILD_OUTPUT_DIR/apk/release/$ARTIFACT_PREFIX-${{ env.APK_VERSION }}.apk"
          mv "$BUILD_OUTPUT_DIR/bundle/release/$ARTIFACT_PREFIX.aab" "$BUILD_OUTPUT_DIR/bundle/release/$ARTIFACT_PREFIX-${{ env.APK_VERSION }}.aab"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts-${{ env.APK_VERSION }}
          path: |
            $BUILD_OUTPUT_DIR/apk/release/$ARTIFACT_PREFIX-${{ env.APK_VERSION }}.apk
            $BUILD_OUTPUT_DIR/bundle/release/$ARTIFACT_PREFIX-${{ env.APK_VERSION }}.aab
            $BUILD_OUTPUT_DIR/**/output-metadata.json

      - name: Create Git tag
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/v${{ github.event.inputs.versionName }}`,
              sha: context.sha
            })

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.versionName }}
          name: Release v${{ github.event.inputs.versionName }}
          body: |
            ### Version ${{ github.event.inputs.versionName }}
            
            **Release Notes:**
            ${{ github.event.inputs.releaseNotes }}
            
            **Build Details:**
            - Build Number: ${{ github.run_number }}
            - Commit: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
          files: |
            $BUILD_OUTPUT_DIR/apk/release/$ARTIFACT_PREFIX-${{ env.APK_VERSION }}.apk
            $BUILD_OUTPUT_DIR/bundle/release/$ARTIFACT_PREFIX-${{ env.APK_VERSION }}.aab
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
