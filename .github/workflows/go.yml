name: Go Lint

on:
  push:
    branches: [main]
    paths:
      - '**.go'

  pull_request:
    branches: [main]
    paths:
      - '**.go'

jobs:
  lint:
    name: Go Lint Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Download dependencies
        run: |
          go mod download

      - name: Clean modcache
        run: |
          go clean -modcache
          go clean -cache
          go mod tidy

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --out-format=colored-line-number

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
      - uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Install go-junit-report
        run: go install github.com/jstemmer/go-junit-report/v2@latest

      - name: Run tests
        run: |
          cd ${{ matrix.module }} && \
          go test -v ./... 2>&1 | tee test-output.txt && \
          cat test-output.txt | go-junit-report -set-exit-code > report.xml

      - name: Upload Test Report
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-report-${{ matrix.module }}
          path: ${{ matrix.module }}/report.xml

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: ${{ matrix.module }}/report.xml

  functional-tests:
    name: Functional Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
      - uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Install go-junit-report
        run: go install github.com/jstemmer/go-junit-report/v2@latest

      - name: Build
        run: cd ${{ matrix.module }} && go build -o ./bin/app .
      - name: Run Functional Tests
        run: |
          cd ${{ matrix.module }} && \
          go test -v -run Functional ./... 2>&1 | tee test-output.txt && \
          cat test-output.txt | go-junit-report -set-exit-code > report.xml

      - name: Upload Functional Test Report
        uses: actions/upload-artifact@v3
        with:
          name: functional-test-report-${{ matrix.module }}
          path: ${{ matrix.module }}/report.xml

      - name: Publish Functional Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: ${{ matrix.module }}/report.xml
